services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow

  airflow-webserver:
    image: apache/airflow:2.10.5-python3.11
    container_name: airflow_webserver
    restart: always
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: z3SEJ3QzMrUQl6KlrL8ByqNnhmUH_CcH19DA1W7SK3Y=
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: "5500"
      AIRFLOW__CORE__DAGS_FOLDER: "/opt/airflow/dags"
      AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: 6000
    ports:
      - "5500:5500"
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./modules:/opt/airflow/modules
      - ./requirements.txt:/opt/airflow/requirements.txt
    entrypoint: >
      /bin/bash -c "
      until nc -z -v -w30 postgres 5432; do echo 'Waiting for Postgres...'; sleep 5; done;
      if ! airflow users list | grep -q 'admin'; then
        airflow users create --username admin --password admin123 --firstname admin --lastname admin --role Admin --email admin@example.com;
      fi &&
      pip install --upgrade pip &&
      pip install -r /opt/airflow/requirements.txt &&
      airflow db init &&
      airflow webserver
      "
    networks:
      - airflow

  airflow-scheduler:
    image: apache/airflow:2.10.5-python3.11
    container_name: airflow_scheduler
    restart: always
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: z3SEJ3QzMrUQl6KlrL8ByqNnhmUH_CcH19DA1W7SK3Y=
      AIRFLOW__CORE__DAGS_FOLDER: "/opt/airflow/dags"
      AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: 6000
    depends_on:
      - postgres
      - airflow-webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./modules:/opt/airflow/modules
      - ./requirements.txt:/opt/airflow/requirements.txt
    entrypoint: >
      /bin/bash -c "
      until nc -z -v -w30 postgres 5432; do echo 'Waiting for Postgres...'; sleep 5; done;
      pip install --upgrade pip &&
      pip install -r /opt/airflow/requirements.txt &&
      airflow db init &&
      airflow scheduler
      "
    networks:
      - airflow

volumes:
  postgres_data:

networks:
  airflow:
    driver: bridge
